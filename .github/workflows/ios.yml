name: iOS starter workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Default Scheme
        run: |
          open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app/
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
          device: ${{'iPhone 13 Pro'}}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
      - name: Unit Test 
        env: 
          scheme: ${{'Demo_CICD_UnitTests'}}
          platform: ${{ 'iOS Simulator' }}
          device: ${{'iPhone 13 Pro'}}
        run: |
           xcodebuild test -scheme "$scheme" -project Demo_CICD.xcodeproj -destination "platform=$platform,name=$device"
      - name: UI Test 
        env: 
          scheme: ${{'Demo_CICD_UITest'}}
          platform: ${{ 'iOS Simulator' }}
          device: ${{'iPhone 13 Pro'}}
        run: |
           xcodebuild test -scheme "$scheme" -project Demo_CICD.xcodeproj -destination "platform=$platform,name=$device"
      - name: AppCenter Upload
        uses: wzieba/AppCenter-Github-Action@v1.3.2
        with:
          appName: DemoApp/Demo_CICD
          token: ${{secrets.APPCENTERTOKEN}}
          group: Testers
      #   file: app/build/outputs/apk/release/app-release-unsigned.apk
      #   notifyTesters: true
      #   debug: false
